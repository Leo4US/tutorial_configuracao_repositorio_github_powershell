Diário de Bordo – Configuração do Git no PowerShell  
Data: 06/2025
(Leo4US)

Registro pessoal da configuração de um repositório no GitHub pelo PowerShell / Windows. Abaixo, registro todos os comandos utilizados, etapas seguidas e dificuldades, durante o processo. Isso me permitirá repetir o procedimento com segurança no futuro ou ajudar a mim mesmo (hehe) ou outras pessoas.

1. Clonei o repositório remoto (tem botãozin ali ao lado, depois de criado o rep.):
cd C:\Users\labo2
git clone https://github.com/Leo4US/tutorial_configuracao_repositorio_github_powershell.git
cd tutorial_configuracao_repositorio_github_powershell

2. Configurei nome e e-mail no Git (evita erro no primeiro commit):
git config --global user.name "Leo4US"
git config --global user.email "leandroattaide@gmail.com"
Obs: tive que trocar o pss

3. Criei a estrutura do projeto:
mkdir 02_processamento, 03_matrizes, 04_identificacao_padroes, 05_modelagem, 06_aws_scripts, 07_documentacao
New-Item README.md
New-Item 07_documentacao\\pipeline_descricao.txt
Obs: isso já estava no meu pc. num quis mudar o nome dos arquivos, nem reorganizar hierarquicamente em tópicos porque não ia conseguir revisar os scripts. ficou assim mesmo.

4. Criei o .gitignore para proteger arquivos sensíveis:
echo "*.csv
*.xlsx
*.json
01_dados_brutos/" > .gitignore
git add .gitignore
git commit -m "Adiciona .gitignore para proteção de dados"

5. Fiz o primeiro commit:
git add .
git commit -m "Commit inicial do repositório"

6. Corrigi erro de branch (usei git branch -M main para renomear):
git branch -M main
git push origin main

7. Verifiquei se estava tudo certo com:
git status
git log --oneline
git remote -v

Principais dificuldades:
- Git não reconheceu meu nome e e-mail no primeiro commit (resolvido com git config).
- Tentei dar push para o branch main antes de criá-lo localmente (corrigido com git branch -M main).
- Digitei errado alguns nomes de pastas ao usar cd.

Conclusão:
A configuração funcionou perfeitamente, após esses ajustes. Os comandos aqui registrados são reais, eles funcionaram no meu ambiente Windows com PowerShell.
